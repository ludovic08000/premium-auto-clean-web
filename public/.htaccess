
# Compression
<IfModule mod_deflate.c>
  AddOutputFilterByType DEFLATE text/html text/plain text/xml text/css application/javascript application/json
</IfModule>

# Définition des types MIME
<IfModule mod_mime.c>
  AddType application/javascript .js
  AddType application/javascript .mjs
  AddType text/javascript .js .mjs
</IfModule>

# Cache Control
<IfModule mod_expires.c>
  ExpiresActive On
  ExpiresByType image/jpg "access plus 1 year"
  ExpiresByType image/jpeg "access plus 1 year"
  ExpiresByType image/gif "access plus 1 year"
  ExpiresByType image/png "access plus 1 year"
  ExpiresByType image/svg+xml "access plus 1 month"
  ExpiresByType text/css "access plus 1 month"
  ExpiresByType application/javascript "access plus 1 month"
  ExpiresByType text/javascript "access plus 1 month"
  ExpiresByType application/pdf "access plus 1 month"
</IfModule>

# Active la réécriture d'URL
<IfModule mod_rewrite.c>
  RewriteEngine On
  RewriteBase /
  
  # Rediriger de HTTP vers HTTPS (si le serveur supporte HTTPS)
  # Utilise la configuration SSL d'Ionos
  RewriteCond %{HTTPS} off
  RewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]
  
  # Ne pas appliquer les règles aux fichiers et dossiers existants
  RewriteCond %{REQUEST_FILENAME} !-f
  RewriteCond %{REQUEST_FILENAME} !-d
  
  # Rediriger toutes les autres requêtes vers index.html
  RewriteRule ^(.*) index.html [L]
</IfModule>

# Configurer les en-têtes CORS et sécurité
<IfModule mod_headers.c>
  # En-têtes CORS pour les ressources spécifiques
  <FilesMatch "\.(html|js|css|mjs)$">
    Header set Access-Control-Allow-Origin "*"
    Header set Content-Type "application/javascript" env=js
    Header set Content-Type "text/javascript" env=mjs
  </FilesMatch>
  
  # En-têtes de sécurité
  Header always set X-Content-Type-Options "nosniff"
  Header always set X-XSS-Protection "1; mode=block"
  Header always set X-Frame-Options "SAMEORIGIN"
  Header always set Referrer-Policy "strict-origin-when-cross-origin"
  
  # Content Security Policy (CSP) - Compatible avec le certificat Ionos
  Header always set Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' https://cdn.gpteng.co https://*.emailjs.com; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; connect-src 'self' https://*.emailjs.com https://api.emailjs.com; font-src 'self'; frame-src 'none'; object-src 'none'; upgrade-insecure-requests;"
  
  # Strict Transport Security (HSTS) - Compatible avec Ionos
  Header always set Strict-Transport-Security "max-age=31536000; includeSubDomains"
</IfModule>

# Protection contre les attaques par clickjacking
Header always append X-Frame-Options SAMEORIGIN

# Forcer le type MIME pour les fichiers JavaScript
<Files ~ "\.js$">
  ForceType application/javascript
</Files>
<Files ~ "\.mjs$">
  ForceType application/javascript
</Files>
<Files ~ "\.tsx$">
  ForceType application/javascript
</Files>

# Configuration pour utiliser le certificat SSL d'Ionos
<IfModule mod_ssl.c>
  SSLOptions +StrictRequire
  SSLProtocol all -SSLv2 -SSLv3 -TLSv1 -TLSv1.1
  SSLCipherSuite HIGH:!aNULL:!MD5:!3DES
  SSLHonorCipherOrder on
</IfModule>
